trigger:
  branches:
    include:
      - trunk
      - feature/*
  paths:
    include:
      - 'Company/*'

pool:
  name: HostedVS2017
  demands: java

steps:
- task: SonarQubePrepare@4
  displayName: 'Prepare analysis on SonarQube'
  inputs:
    SonarQube: 'SonarLocal'
    scannerMode: 'CLI'
    configMode: manual
    cliProjectKey: '$(Build.Repository.Name)'
    cliProjectName: '$(Build.Repository.Name)'
    cliProjectVersion: '$(Build.BuildNumber)'
    cliSources: Company
    extraProperties: |
     sonar.java.binaries=$(Build.SourcesDirectory)/Company/build/classes
     sonar.java.libraries=Company/build/libs
     sonar.branch.name=$(Build.SourceBranchName)
      sonar.exclusions = */.gradle,*/.XML,Company/src/test/**/*,Company/CCReport43F6D5EF/**/* 
      sonar.coverage.jacoco.xmlReportPaths=Company/CCReport43F6D5EF/summary.xml

- task: Gradle@2
  displayName: 'gradlew clean build'
  inputs:
    gradleWrapperFile: 'Company/gradlew'
    workingDirectory: 'Company'
    tasks: 'clean build'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    codeCoverageToolOption: 'JaCoCo'
    codeCoverageClassFilesDirectories: 'Company/build/classes/java/main'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    sonarQubeRunAnalysis: false

- task: SonarQubeAnalyze@4
  displayName: 'Run Code Analysis'

- task: sonar-buildbreaker@8
  inputs:
    SonarQube: 'SonarLocal'
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'JaCoCo'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/Company/CCReport43F6D5EF/summary.xml'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/Company/build/libs'
    ArtifactName: 'Company'
    publishLocation: 'Container'